version: 2
jobs:
  build:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install npm dependencies
          command: npm install
      - run:
          name: Build output
          command: npm run out
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
  unittest:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install npm dependencies
          command: npm install
      - run:
          name: Run tests with JUnit as reporter
          command: npx jest --ci --runInBand --reporters=default --reporters=jest-junit --config=jest.config.ci.js
          environment:
            JEST_JUNIT_OUTPUT: 'reports/junit/unit-test-results.xml'
      - store_test_results:
          path: reports
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
  e2etest:
    machine:
      enabled: true
      docker_layer_caching: true
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run:
          name: Install Node.js 10.16.0 with build in nvm tool
          command: |
            echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
            echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
            nvm install v10.16.0 && nvm use v10.16.0 && nvm alias default v10.16.0
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install npm dependencies
          command: npm install
      - run:
          name: Start localstack
          command: npm run localstack:up
      - run:
          name: Build output
          command: |
            node -v
            npm run out
      - run:
          name: Deploy functions to localstack
          command: npm run serverless
      - run:
          name: Run tests with JUnit as reporter
          command: npx jest --ci --runInBand --reporters=default --reporters=jest-junit --config=jest.config.e2e.js
          environment:
            JEST_JUNIT_OUTPUT: 'reports/junit/e2e-test-results.xml'
      - store_test_results:
          path: reports
      - run:
          name: Finish localstack
          command: npm run localstack:down
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - unittest:
          requires:
            - build
      - e2etest:
          requires:
            - build
